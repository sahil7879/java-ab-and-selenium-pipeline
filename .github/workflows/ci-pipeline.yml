name: Java CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444
        options: > 
          --health-cmd "curl -f http://localhost:4444 || exit 1" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3


    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Java (JDK 11)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
    
    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Build with Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Step 5: Run Unit Tests
    - name: Run Unit Tests
      run: mvn test
    
    # Step 6: Start the Spring Boot Application
    - name: Start Application
      run: java -jar target/login-app-0.0.1-SNAPSHOT.jar & # Adjust jar file name
      env:
        DB_URL: jdbc:mysql://localhost:3306/mydb
        DB_USER: root
        DB_PASS: password

    # Step 7: Wait for the application to be up and running
    - name: Wait for application startup
      run: sleep 20

    # Step 8: Run Apache Benchmark on login page
    - name: Apache Benchmark Test
      run: |
        sudo apt-get install -y apache2-utils
        ab -n 100 -c 10 http://localhost:8080/login

    # Step 9: Run Selenium Tests
    - name: Run Selenium Tests
      run: |
        mvn test -Dtest=LoginSeleniumTest # Adjust to your Selenium test class
      env:
        SELENIUM_GRID_URL: http://localhost:4444/wd/hub
